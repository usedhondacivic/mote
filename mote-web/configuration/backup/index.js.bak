import init from './pkg/configuration.js'

function alert_reboot() {
    document.getElementById("alert").hidden = false;
    setTimeout(function() {
        location.reload();
    }, 3000);
}
function uid_updated() {
    document.getElementById("uid_submit").hidden = false;
}

function uid_submit() {
    let uid = document.getElementById("uid").value

    if (uid.length > 5) {
        document.getElementById("uid_submit").hidden = true;
        alert_reboot();
    } else {
        alert("Unique identifier must have > 5 characters.");
    }
}

function update_selected_network(name) {
    document.getElementById("selected_network").innerHTML = "Network: " + name;
}

async function test_webserial() {
    const port = await navigator.serial.requestPort();
    await port.open({ baudRate: 115200 });

    const textEncoder = new TextEncoderStream();
    const writableStreamClosed = textEncoder.readable.pipeTo(port.writable);
    const writer = textEncoder.writable.getWriter();

    await writer.write('Hello mote');

    // Optional: Read from the serial port
    const textDecoder = new TextDecoderStream();
    const readableStreamClosed = port.readable.pipeTo(textDecoder.writable);
    const reader = textDecoder.readable.getReader();

    while (true) {
        const { value, done } = await reader.read();
        if (done) {
            reader.releaseLock();
            break;
        }
        console.log('Received:', value);
    }
}

await init();
