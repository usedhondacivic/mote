# Simple workflow for deploying static content to GitHub Pages
name: Deploy to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  CARGO_TERM_COLOR: always

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Install mdbook
        run: cargo install mdbook --no-default-features --features search --vers "^0.4" --locked
      - name: Build Book
        run: |
          cd mote-web/mote-book
          mdbook build
      - name: Test Book
        run: |
          cd mote-web/mote-book
          mdbook test
      - name: Install wasm-pack
        run: |
          cargo install wasm-pack --vers "^0.13" --locked
      - name: Build configuration wasm
        run: |
          cd mote-web/configuration
          wasm-pack build --target web
      - name: Collect artifacts
        run: |
          mkdir output
          cp -r mote-web/mote-book/book/* output/
          cp -r mote-web/configuration output/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './output'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
